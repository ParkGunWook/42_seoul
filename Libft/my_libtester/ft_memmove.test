/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   ft_memmove.c                                       :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: gpark <gpark@student.42.fr>                +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2021/05/03 15:38:47 by gpark             #+#    #+#             */
/*   Updated: 2021/05/03 16:54:38 by gpark            ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "libft.h"

static	void	original_memmove(void *dst, const void *src, size_t len)
{
	size_t	idx;

	idx = 0;
	while (idx < len)
	{
		*((unsigned char*)(dst + idx)) = *((unsigned char*)src + idx);
		idx++;
	}
}

static	void	reverse_memmove(void *dst, const void *src, size_t len)
{
	size_t idx;

	idx = len;
	while (idx != 0)
	{
		idx--;
		*((unsigned char*)dst + idx) = *((unsigned char*)src + idx);
	}
}

void			*ft_memmove(void *dst, const void *src, size_t len)
{
	if (dst > src)
		reverse_memmove(dst, src, len);
	else
		original_memmove(dst, src, len);
	return (dst);
}

int		main(void)
{
	int		*arr;
	int		*arr2;

	arr = (int*)malloc(sizeof(int) * 10);
	arr2 = (int*)malloc(sizeof(int) * 10);
	for(int i =0 ;i<10;i++)
	{
		arr[i] = i * 10;
		arr2[i] = i * 10;
	}
	printf("Before : ");
	for(int i=0;i<10;i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");
	ft_memmove(arr, arr+3, 16);
	printf("After  : ");
	for(int i=0;i<10;i++)
	{
		printf("%d ", arr[i]);
	}
	printf("\n");

	printf("Before : ");
	for(int i=0;i<10;i++)
	{
		printf("%d ", arr2[i]);
	}
	printf("\n");
	memmove(arr2, arr2+3, 16);
	printf("After  : ");
	for(int i=0;i<10;i++)
	{
		printf("%d ", arr2[i]);
	}
	printf("\n");
}
